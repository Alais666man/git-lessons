# Однострочный комментарии

'''
Многострочные комментарии
'''

"""
Многострочный комментарий
"""

# 1. Как объявить переменную
'''Переменная -поименнованная область
оперативной памяти в которую можно
записать даные и из которой можно прочитать

Зависимость от регистра
PEP-8 - договорённость об оформлении кода python
в питоне нет констант
'''

username = 'root' # присвоить имя переменной
print(username) # считывание значение переменной и вывод на экран (print)

username = 'toor' # присвоить новое значение
print(username)




# Какие типы данных существуют в python?
"""
Тип данных переменной является  её характеристикой 
и описывает следующее:
- Количество памяти
- Диапазон допустимых значений
- Допустимые операции над переменной
- Формат отображения (для человека)


1. Простые или скалярные типы данных - в один момент времени может
 хранить только одно значение
 	- int - целое число
 	- float - исло с плавающей точкой (дробь)
 	- bool - догическое значение (true false)
 	- complex - комплексное число
 	- str - строка
 	- bytes - только Pthon3 байтовая строка
2. Сложные (составные, структурные) типы данных - в один момент
времени хранят любое количество значений любого типа
	- tuple - кортеж
	- list - список
	- set - множество
	- dict - словарь
	- object - объект
3. Специальные типы данных
	- None - пустота, отсутствие значения (именно с большой буквы)

"""


a = None # В питоне переменная декларируется и сразу инициилизируется

# bool  - логическое значение
flag1 = True
flag2 = False #True/False Именно с больших букв 

# Целые числа
i1 = 666
i2 = 0b10101 # Двоичная система
i3 = 0o755 # Восьмиричная
i4 = 0xaf # Шестнадцатиричная (Регистр не важен)


# float
f1 = 1.23 # Только через точку. Запятая - спец. символ
f2 = 1e-3 # 0.001 дробное число
f3 = 1e6 # 1000000.0 (10 в шестой степени)

#  complex
c1 = 3.14j

# str

s1 = 'string'
s2 = "str\"ing" # \ - символ экранирования
s3 = '''Много"
	стр'очная 
	строка
	'''
	#Формат сохраняется


s5  = r'^\d+$' # Сырая строка (питон не будет выполнять авто экранирования ) (raw)
s6 = u'Unicode in Python 2' # u - модификатор unit кода из python2


# bytes
s7 = b'Hello' 
'''
 b - модификатор байтовый строк. 
Строка без кодировки(набор байтов)

'''	
